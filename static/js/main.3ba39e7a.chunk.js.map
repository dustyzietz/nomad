{"version":3,"sources":["AddItem.js","FilterDialog.js","ThemeContext.js","AppBar.js","Card.js","CardGrid.js","App.js","serviceWorker.js","index.js"],"names":["FormDialog","React","useState","open","setOpen","handleClose","Button","variant","color","onClick","style","margin","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","DialogActions","FillterDialog","checkedA","checkedB","checkedC","checkedD","state","setState","handleChange","name","event","target","checked","dialogButton","checkBox","FormGroup","col","FormControlLabel","control","Checkbox","onChange","value","ThemeContext","createContext","ThemeProvider","primary","Provider","this","props","children","Component","ButtonAppBar","useContext","console","log","Appbar","backgroundColor","textAlign","title","flexGrow","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","useStyles","makeStyles","theme","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","icon","RecipeReviewCard","item","classes","expanded","setExpanded","Grid","xs","sm","md","lg","Card","className","CardHeader","Avatar","subheader","price","CardMedia","image","CardActions","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","component","CardGrid","container","spacing","details","map","i","key","uuid","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ba39e7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\nconst style = {\r\n  dialogButton: {\r\n    margin: 25\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"default\" onClick={handleClickOpen} style={style.dialogButton}>\r\n        Add Item\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function FillterDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true,\r\n    checkedD: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  const style = {\r\n    dialogButton: {\r\n      margin: 25\r\n    },\r\n    checkBox: {\r\n      color: '#ff5252',\r\n      '&$checked': {\r\n        color: '#ff5252',\r\n    }}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        onClick={handleClickOpen}\r\n        style={style.dialogButton}\r\n      >\r\n        Filter Products\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          <FormGroup col>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                style={style.checkBox}\r\n                  checked={state.checkedA}\r\n                  onChange={handleChange(\"checkedA\")}\r\n                  value=\"checkedA\"\r\n                />\r\n              }\r\n              label=\"Rugs\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={style.checkBox}\r\n                  checked={state.checkedB}\r\n                  onChange={handleChange(\"checkedB\")}\r\n                  value=\"checkedB\"\r\n                />\r\n              }\r\n              label=\"Poofs\"\r\n            />\r\n             <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={style.checkBox}\r\n                  checked={state.checkedC}\r\n                  onChange={handleChange(\"checkedC\")}\r\n                  value=\"checkedC\"\r\n                />\r\n              }\r\n              label=\"Leather\"\r\n            />\r\n             <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={style.checkBox}\r\n                  checked={state.checkedD}\r\n                  onChange={handleChange(\"checkedD\")}\r\n                  value=\"checkedD\"\r\n                />\r\n              }\r\n              label=\"Bags\"\r\n            />\r\n          </FormGroup>\r\n          \r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, Component } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\n export class ThemeProvider extends Component {\r\n  state = {\r\n    primary: '#ff5252'\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n    <ThemeContext.Provider value={this.state}>\r\n      {this.props.children}\r\n    </ThemeContext.Provider>\r\n    );\r\n  }\r\n}","import React ,{useContext}from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport AddItem from './AddItem';\r\nimport FilterDialog from './FilterDialog';\r\nimport { ThemeContext } from './ThemeContext';\r\n\r\n\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  const { primary } = useContext(ThemeContext);\r\n  console.log(primary);\r\n  const style = {\r\n    Appbar: {\r\n      backgroundColor: primary ,\r\n      textAlign: 'center',\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  }\r\n  return (\r\n    <div >\r\n      <AppBar position=\"static\" style={style.Appbar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <FilterDialog/>\r\n          <Typography variant=\"h4\" style={style.title} >\r\n          NOMAD\r\n          </Typography>\r\n          <AddItem/>\r\n          <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\r\n            <ShoppingCart />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '80%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#ffb142',\r\n  },\r\n  icon: {\r\n    color: '#ffb142',\r\n  }\r\n}));\r\n\r\nexport default function RecipeReviewCard(item) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            M\r\n          </Avatar>\r\n        }\r\n        \r\n        title={item.title}\r\n        subheader={item.price}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={item.image}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardActions >\r\n        <IconButton aria-label=\"add to favorites\" >\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" >\r\n          <ShareIcon />\r\n        </IconButton>\r\n        \r\n        <IconButton\r\n          className={ clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" className={classes.icon}>\r\n          <AddShoppingCart />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        Vintage 1940s Moroccan rug with a red field, orange tribal design. Measures: 5.04 x 8.07.\r\n        </Typography>\r\n      </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport Card from './Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport uuid from 'uuid';\r\n\r\n\r\nexport default function CardGrid() {\r\n\r\n  const items = [\r\n    {\r\n      title: 'Vintage 1940s Red/Orange Moroccan Rug',\r\n      price: \"$899.10\",\r\n      image: \"https://i.etsystatic.com/16632652/r/il/35adf3/1885460879/il_794xN.1885460879_do15.jpg\",\r\n      details: `OLD Bohemian rug 5x8 Moroccan Antique Beniourain Rugs Alfombras Berberes Tapis Berber Berber Teppish beni ourain moroccan rugs - Boujad rug Vintage Prestigious Moroccan Berber Vintage Rug, BENI OURAIN 100% wool Moroccan Bohemian rug\r\n      This hand-woven Moroccan Berber rug is hand made with a variety of vibrant colors featuring a variety of traditional Abstract design weaves separated by plain-weave bands, and is fringed on one end. This vintage area rug will be a beautiful floor accent piece, or a stunning wall hanging in any home.`,\r\n    },\r\n    {\r\n      title: 'Vintage 1940s Red/Orange Moroccan Rug',\r\n      price: \"$899.10\",\r\n      image: `https://a.1stdibscdn.com/archivesE/upload/1121189/f_93943831513771395159/9394383_master.jpg?width=768`,\r\n      details: \"OLD Bohemian rug 5x8 Moroccan Antique Beniourain Rugs Alfombras Berberes Tapis Berber Berber Teppish beni ourain moroccan rugs - Boujad rug\",\r\n    },\r\n    {\r\n      title: 'Vintage 1940s Red/Orange Moroccan Rug',\r\n      price: \"$899.10\",\r\n      image: \"https://i.etsystatic.com/16632652/r/il/35adf3/1885460879/il_794xN.1885460879_do15.jpg\",\r\n      details: \"OLD Bohemian rug 5x8 Moroccan Antique Beniourain Rugs Alfombras Berberes Tapis Berber Berber Teppish beni ourain moroccan rugs - Boujad rug\",\r\n    },\r\n    {\r\n      title: 'Vintage 1940s Red/Orange Moroccan Rug',\r\n      price: \"$899.10\",\r\n      image: \"https://i.etsystatic.com/16632652/r/il/35adf3/1885460879/il_794xN.1885460879_do15.jpg\",\r\n      details: \"OLD Bohemian rug 5x8 Moroccan Antique Beniourain Rugs Alfombras Berberes Tapis Berber Berber Teppish beni ourain moroccan rugs - Boujad rug\",\r\n    },\r\n  ];\r\n\r\n  const style = {\r\n    container: {\r\n      backgroundColor: '#f7f1e3',\r\n     // justifyContent: 'space-between',\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n       <Grid container spacing={3} style={style.container}>\r\n         {items.map(i => (\r\n          <Card key={uuid()} title={i.title} price={i.price} image={i.image} details={i.details} />\r\n         ))}\r\n       \r\n      </Grid>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport AppBar from './AppBar';\nimport CardGrid from './CardGrid';\nimport './App.css';\nimport { ThemeProvider } from './ThemeContext';\n\n\nfunction App() {\n \n  return (\n   <div >\n      <ThemeProvider>\n    <AppBar/>\n    <CardGrid/>\n    </ThemeProvider>\n     </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}